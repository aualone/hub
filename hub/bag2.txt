#include <iostream>

using namespace std;

int c,n;
int v[100],w[100];
int x[100],bestx[100];
int cv=0,cw=0,mw=0,mv=0;

int place(int t)
{
    if(cw+w[t]>c)
       return 0;
    return 1;
}
void backtrack(int t)
{

    if(t>n)
    {
      if(cv>mv)
        {
            mv=cv;
            for(int i=1;i<=n;i++)
            {
                bestx[i]=x[i];
            }
        }
    }
    else
    {
        for(int m=0;m<=1;m++)
        {
            x[t]=m;
            if(x[t]==0)
            {
                backtrack(t+1);
                x[t]=0;
            }
            else if((place(t)==1)&&(x[t]==1))
            {
                cv=cv+v[t];
                cw=cw+w[t];
                backtrack(t+1);
                x[t]=0;
                cv=cv-v[t];
                cw=cw-w[t];
            }
        }
    }



}




int main()
{
    cin>>c>>n;
    for(int i=1;i<=n;i++)
    {
        cin>>w[i];

    }
    for(int i=1;i<=n;i++)
    {
        cin>>v[i];
    }

    backtrack(1);
    cout<<mv<<endl;
    for(int i=1;i<=n;i++)
    {
        cout<<bestx[i]<<" ";
    }

    return 0;
}

